# ==========================================
# AI BOX - Prometheus Configuration
# Monitoring and metrics collection
# ==========================================

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'aibox-production'
    replica: 'prometheus-1'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them
rule_files:
  - "alert_rules.yml"

# Scrape configuration
scrape_configs:
  # ==========================================
  # Prometheus Self-Monitoring
  # ==========================================
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # ==========================================
  # AI Box Services
  # ==========================================
  
  # API Gateway
  - job_name: 'api-gateway'
    static_configs:
      - targets: ['api-gateway:8000']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']

  # Model Server
  - job_name: 'model-server'
    static_configs:
      - targets: ['model-server:8001']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']

  # Data Manager
  - job_name: 'data-manager'
    static_configs:
      - targets: ['data-manager:8002']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']

  # ==========================================
  # Database Services
  # ==========================================
  
  # PostgreSQL (using postgres_exporter)
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    metrics_path: /metrics

  # Redis (using redis_exporter)
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    metrics_path: /metrics

  # MongoDB (using mongodb_exporter)
  - job_name: 'mongodb'
    static_configs:
      - targets: ['mongodb-exporter:9216']
    scrape_interval: 30s
    metrics_path: /metrics

  # ==========================================
  # Infrastructure Monitoring
  # ==========================================
  
  # Node Exporter (system metrics)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    metrics_path: /metrics

  # cAdvisor (container metrics)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: /metrics

  # Docker daemon metrics
  - job_name: 'docker'
    static_configs:
      - targets: ['host.docker.internal:9323']
    scrape_interval: 30s
    metrics_path: /metrics

  # ==========================================
  # Network and Load Balancer
  # ==========================================
  
  # Nginx metrics (using nginx-prometheus-exporter)
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 30s
    metrics_path: /metrics

  # ==========================================
  # AI-Specific Metrics
  # ==========================================
  
  # GPU metrics (using nvidia-gpu-exporter)
  - job_name: 'gpu-metrics'
    static_configs:
      - targets: ['gpu-exporter:9445']
    scrape_interval: 15s
    metrics_path: /metrics
    honor_labels: true

  # AI Model Performance metrics
  - job_name: 'ai-model-metrics'
    static_configs:
      - targets: ['model-server:8001']
    scrape_interval: 10s
    metrics_path: /ai-metrics
    scrape_timeout: 5s
    honor_labels: true

  # ==========================================
  # Service Discovery (for dynamic environments)
  # ==========================================
  
  # Docker service discovery
  - job_name: 'docker-services'
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 30s
    relabel_configs:
      - source_labels: [__meta_docker_container_label_prometheus_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_docker_container_label_prometheus_port]
        action: replace
        regex: (.+)
        target_label: __address__
        replacement: ${1}
      - source_labels: [__meta_docker_container_label_prometheus_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)

  # Kubernetes service discovery (if running on K8s)
  # - job_name: 'kubernetes-services'
  #   kubernetes_sd_configs:
  #     - role: service
  #   relabel_configs:
  #     - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
  #       action: keep
  #       regex: true

# ==========================================
# Recording Rules
# ==========================================
recording_rules:
  - name: aibox.rules
    rules:
      # Request rate
      - record: aibox:request_rate_5m
        expr: rate(http_requests_total[5m])
      
      # Error rate
      - record: aibox:error_rate_5m
        expr: rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m])
      
      # Response time percentiles
      - record: aibox:response_time_p95_5m
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m]))
      
      - record: aibox:response_time_p99_5m
        expr: histogram_quantile(0.99, rate(http_request_duration_seconds_bucket[5m]))
      
      # AI inference metrics
      - record: aibox:inference_rate_5m
        expr: rate(ai_inference_total[5m])
      
      - record: aibox:inference_duration_p95_5m
        expr: histogram_quantile(0.95, rate(ai_inference_duration_seconds_bucket[5m]))
      
      # Resource utilization
      - record: aibox:cpu_utilization_5m
        expr: 1 - rate(node_cpu_seconds_total{mode="idle"}[5m])
      
      - record: aibox:memory_utilization
        expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes
      
      - record: aibox:disk_utilization
        expr: (node_filesystem_size_bytes - node_filesystem_free_bytes) / node_filesystem_size_bytes

# ==========================================
# Remote Write (for long-term storage)
# ==========================================
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint/api/v1/write"
#     basic_auth:
#       username: "username"
#       password: "password"
#     queue_config:
#       max_samples_per_send: 1000
#       max_shards: 200
#       capacity: 2500
