# ==========================================
# AI BOX - API Gateway Dockerfile
# Multi-stage build for production optimization
# ==========================================

# Build arguments
ARG TARGETPLATFORM
ARG BUILDPLATFORM

# ==========================================
# Stage 1: Base Image with Dependencies
# ==========================================
FROM oryza-ai-box-base:latest as base

# Service-specific environment variables
ENV SERVICE_NAME=api-gateway \
    SERVICE_PORT=8000 \
    HEALTH_PORT=8000 \
    HEALTH_ENDPOINT=/health

# Set working directory (already created in base image)
WORKDIR /app

# Switch to root temporarily for installation
USER root

# ==========================================
# Stage 2: Development Dependencies
# ==========================================
FROM base as dev-deps

# Copy requirements and install API Gateway specific dependencies
COPY requirements.txt pyproject.toml ./

# Install API Gateway specific dependencies
RUN pip install --no-cache-dir \
    # API Gateway specific packages
    python-multipart>=0.0.6 \
    python-jose[cryptography]>=3.3.0 \
    passlib[bcrypt]>=1.7.4 \
    # Rate limiting
    slowapi>=0.1.9 \
    # Request validation
    email-validator>=2.1.0 \
    # Additional FastAPI dependencies
    jinja2>=3.1.2

# ==========================================
# Stage 3: Production Build
# ==========================================
FROM dev-deps as production

# Copy application code
COPY --chown=aibox:aibox . .

# Install the application in development mode
RUN pip install -e .

# Switch back to non-root user
USER aibox

# Health check using our custom script
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD /app/health_check.sh

# Expose port
EXPOSE 8000

# Default command with proper configuration
CMD ["uvicorn", "services.api_gateway.main:app", \
     "--host", "0.0.0.0", \
     "--port", "8000", \
     "--workers", "1", \
     "--access-log", \
     "--log-level", "info"]

# ==========================================
# Stage 4: Edge Device Optimization
# ==========================================
FROM production as edge

# Install edge-specific optimizations
RUN pip install onnxruntime

# Optimize for ARM64 devices
RUN if [ "$(uname -m)" = "aarch64" ]; then \
        pip install --extra-index-url https://www.piwheels.org/simple/ numpy opencv-python; \
    fi

# Edge-specific configuration
ENV WORKERS=2 \
    MAX_MEMORY=512MB \
    EDGE_MODE=true

CMD ["uvicorn", "services.api_gateway.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "2"]
